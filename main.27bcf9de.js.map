{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","message","fieldSide","fieldRows","querySelectorAll","fieldCells","score","generateInEmptyCell","x","Math","floor","random","y","cell","children","textContent","addClass","cells","forEach","className","classList","add","innerText","calcScore","scoreElement","newCellContent","prevScore","newScore","Number","slide","row","filter","length","i","cell1","cell2","remove","slideReverse","pushCells","cellsContent","push","el","deleteAdditionalClass","size","j","changeClasses","newCellsContent","createColumnArrays","rows","colArr","map","arr","changeColumnArrays","mainArr","newRowsArr","newRowContent","changeColumnCells","tableRows","newArr","slideLeft","newRow","slideRight","newLength","emptyArr","Array","fill","slideUp","newArrLength","filledArr","filledArrNewLength","slideDown","startGame","element","style","outline","display","window","location","reload","continueGame","setTimeout","checkPossibleMove","array","canBeMoved","checkFullBoard","arrays","fullBoard","every","canBeMovedVertically","canBeMovedHorizontally","loseGame","canSlideHorizontally","canSlideVertically","winGame","tableCells","indexOf","addMessage","messageContainer","messageClass","playing","addEventListener","e","target","keyEvent","code","key"],"mappings":"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","file":"main.27bcf9de.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nconst message = document.querySelector('.message-container');\n\nconst fieldSide = 4;\nconst fieldRows = [...document.querySelectorAll('tr')];\nconst fieldCells = [...document.querySelectorAll('td')];\nconst score = document.querySelector('.game-score');\n\nfunction generateInEmptyCell() {\n  do {\n    const x = Math.floor(Math.random() * fieldSide);\n    const y = Math.floor(Math.random() * fieldSide);\n\n    const cell = fieldRows[x].children[y];\n\n    if (!cell.textContent) {\n      cell.textContent = `${Math.random() >= 0.9 ? 4 : 2}`;\n      break;\n    }\n  } while (true);\n}\n\nfunction addClass(cells) {\n  cells.forEach(cell => {\n    if (cell.textContent) {\n      cell.className = `field-cell`;\n      cell.classList.add(`field-cell--${cell.innerText}`);\n    };\n  });\n}\n\nfunction calcScore(scoreElement, newCellContent) {\n  const prevScore = +scoreElement.innerText;\n  const newScore = prevScore + Number(newCellContent);\n\n  scoreElement.innerText = newScore;\n}\n\nfunction slide(row) {\n  const cells = [...row.cells].filter(cell => cell.innerText !== '');\n\n  if (cells.length > 0) {\n    for (let i = 0; i < cells.length - 1; i++) {\n      let cell1 = cells[i].innerText;\n      let cell2 = cells[i + 1].innerText;\n\n      if (cell1 === cell2) {\n        cell1 = +(cell1) * 2;\n\n        calcScore(score, cell1);\n\n        cells[i + 1].classList.remove(\n          `field-cell--${cell2}`\n        );\n        cell2 = '';\n      }\n\n      cells[i].innerText = cell1;\n      cells[i + 1].innerText = cell2;\n    }\n  }\n\n  return row;\n}\n\nfunction slideReverse(row) {\n  const cells = [...row.cells].filter(cell => cell.innerText !== '');\n\n  if (cells.length > 0) {\n    for (let i = cells.length - 1; i > 0; i--) {\n      let cell1 = cells[i].innerText;\n      let cell2 = cells[i - 1].innerText;\n\n      if (cell1 === cell2) {\n        cell1 = +(cell1) * 2;\n\n        calcScore(score, cell1);\n\n        cells[i - 1].classList.remove(\n          `field-cell--${cell2}`\n        );\n        cell2 = '';\n      }\n\n      cells[i].innerText = cell1;\n      cells[i - 1].innerText = cell2;\n    }\n  }\n\n  return row;\n}\n\nfunction pushCells(row) {\n  let cellsContent = [];\n\n  for (const cell of row.children) {\n    cellsContent.push(cell.innerText);\n  }\n\n  cellsContent = cellsContent.filter(el => el !== '');\n\n  return cellsContent;\n}\n\nfunction deleteAdditionalClass(row, size) {\n  for (let j = 0; j < size; j++) {\n    const cell = row.children[j];\n\n    if (!cell.innerText) {\n      cell.className = 'field-cell';\n    }\n  }\n}\n\nfunction changeClasses(row, newCellsContent) {\n  for (let i = 0; i < fieldSide; i++) {\n    const cell = row.children[i];\n\n    cell.innerText = newCellsContent[i] || '';\n\n    cell.classList.add(\n      `field-cell--${cell.innerText}`\n    );\n  }\n\n  deleteAdditionalClass(row, fieldSide);\n}\n\nfunction createColumnArrays(rows, size) {\n  let colArr = [];\n\n  for (let i = 0; i < size; i++) {\n    const valArr = [];\n\n    colArr.push(valArr);\n  }\n\n  for (const row of rows) {\n    for (let i = 0; i < size; i++) {\n      const cellsContent = row.children[i].innerText;\n\n      colArr[i].push(cellsContent);\n    }\n  }\n\n  colArr = colArr.map(arr => arr.filter(el => el !== ''));\n\n  return colArr;\n}\n\nfunction changeColumnArrays(mainArr, size) {\n  const newRowsArr = [];\n\n  for (let i = 0; i < size; i++) {\n    const newRowContent = mainArr.map(arr => arr[i]);\n\n    newRowsArr.push(newRowContent);\n  }\n\n  return newRowsArr;\n}\n\nfunction changeColumnCells(tableRows, newArr, size) {\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      const cell = tableRows[i].children[j];\n\n      cell.innerText = newArr[i][j];\n\n      cell.classList.add(\n        `field-cell--${cell.innerText}`\n      );\n    }\n\n    deleteAdditionalClass(tableRows[i], size);\n  }\n}\n\nfunction slideLeft(row) {\n  const newRow = slide(row);\n  const cellsContent = pushCells(newRow);\n\n  changeClasses(newRow, cellsContent);\n}\n\nfunction slideRight(row) {\n  const newRow = slideReverse(row);\n  let cellsContent = pushCells(newRow);\n  const newLength = fieldSide - cellsContent.length;\n  const emptyArr = new Array(newLength).fill('');\n\n  cellsContent = [\n    ...emptyArr,\n    ...cellsContent,\n  ];\n\n  changeClasses(newRow, cellsContent);\n}\n\nfunction slideUp(tableRows) {\n  let colArr = createColumnArrays(tableRows, fieldSide);\n\n  colArr = colArr.map(arr => {\n    const newArrLength = fieldSide - arr.length;\n    let filledArr = [\n      ...arr,\n      ...new Array(newArrLength).fill(''),\n    ];\n\n    for (let i = 0; i < fieldSide - 1; i++) {\n      if ((filledArr[i] === filledArr[i + 1]) && (filledArr[i] !== '')) {\n        filledArr[i] *= 2;\n        calcScore(score, filledArr[i]);\n        filledArr[i + 1] = '';\n        filledArr = filledArr.filter(el => el !== '');\n\n        const filledArrNewLength = fieldSide - filledArr.length;\n\n        filledArr = [\n          ...filledArr,\n          ...new Array(filledArrNewLength).fill(''),\n        ];\n      }\n    }\n\n    return filledArr;\n  });\n\n  const newRowsArr = changeColumnArrays(colArr, fieldSide);\n\n  changeColumnCells(tableRows, newRowsArr, fieldSide);\n}\n\nfunction slideDown(tableRows) {\n  let colArr = createColumnArrays(tableRows, fieldSide);\n\n  colArr = colArr.map(arr => {\n    const newArrLength = fieldSide - arr.length;\n    let filledArr = [\n      ...new Array(newArrLength).fill(''),\n      ...arr,\n    ];\n\n    for (let i = fieldSide - 1; i > 0; i--) {\n      if ((filledArr[i] === filledArr[i - 1]) && (filledArr[i] !== '')) {\n        filledArr[i] *= 2;\n        calcScore(score, filledArr[i]);\n        filledArr[i - 1] = '';\n        filledArr = filledArr.filter(el => el !== '');\n\n        const filledArrNewLength = fieldSide - filledArr.length;\n\n        filledArr = [\n          ...new Array(filledArrNewLength).fill(''),\n          ...filledArr,\n        ];\n      }\n    }\n\n    return filledArr;\n  });\n\n  const newRowsArr = changeColumnArrays(colArr, fieldSide);\n\n  changeColumnCells(tableRows, newRowsArr, fieldSide);\n}\n\nfunction startGame(element) {\n  if (element.className === 'button start') {\n    element.textContent = 'Restart';\n    element.classList.remove('start');\n    element.classList.add('restart');\n    element.style.outline = 'none';\n\n    message.style.display = 'none';\n\n    for (let i = 0; i < 2; i++) {\n      generateInEmptyCell();\n    }\n\n    fieldCells.forEach(cell => {\n      if (cell.textContent !== '') {\n        cell.classList.add(`field-cell--${cell.textContent}`);\n      };\n    });\n  } else {\n    window.location.reload();\n  }\n}\n\nfunction continueGame() {\n  setTimeout(generateInEmptyCell(), 4000);\n  addClass(fieldCells);\n}\n\nfunction checkPossibleMove(array) {\n  const canBeMoved = array.filter(arr => {\n    for (let i = 0; i < arr.length - 1; i++) {\n      if (arr[i] === arr[i + 1]) {\n        return arr;\n      }\n    }\n  });\n\n  return canBeMoved;\n}\n\nfunction checkFullBoard(arrays, size) {\n  let fullBoard = false;\n\n  if (arrays.every(arr => arr.length === size)) {\n    const canBeMoved = checkPossibleMove(arrays);\n\n    if (canBeMoved.length === 0) {\n      fullBoard = true;\n    }\n  }\n\n  return fullBoard;\n}\n\nfunction canBeMovedVertically(rows, size) {\n  const columns = createColumnArrays(rows, size);\n\n  return checkFullBoard(columns, size);\n}\n\nfunction canBeMovedHorizontally(rows, size) {\n  const tableRows = [];\n\n  for (const row of rows) {\n    tableRows.push([...row.children].map(el => el.textContent));\n  }\n\n  return checkFullBoard(tableRows, size);\n}\n\nfunction loseGame(tableRows, size) {\n  let fullBoard = false;\n  const canSlideHorizontally = canBeMovedHorizontally(tableRows, size);\n  const canSlideVertically = canBeMovedVertically(tableRows, size);\n\n  if (canSlideHorizontally && canSlideVertically) {\n    fullBoard = true;\n  }\n\n  return fullBoard;\n}\n\nfunction winGame(tableCells) {\n  const cellsContent = tableCells.map(el => el.textContent);\n\n  if (cellsContent.indexOf('2048') !== -1) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction addMessage(messageContainer, messageClass) {\n  messageContainer.style.display = 'block';\n  messageContainer.children[2].classList.add('hidden');\n\n  if (messageClass === 'lose') {\n    messageContainer.children[0].classList.remove('hidden');\n  }\n\n  if (messageClass === 'win') {\n    messageContainer.children[1].classList.remove('hidden');\n  }\n}\n\nfunction playing() {\n  if (!loseGame(fieldRows, fieldSide)) {\n    if (winGame(fieldCells)) {\n      addMessage(message, 'win');\n    }\n    continueGame();\n  }\n\n  if (loseGame(fieldRows, fieldSide)) {\n    addMessage(message, 'lose');\n  }\n}\n\nstartButton.addEventListener('click', e => {\n  startGame(e.target);\n\n  document.addEventListener('keydown', keyEvent => {\n    const code = keyEvent.key;\n\n    switch (code) {\n      case 'ArrowLeft':\n        for (const row of fieldRows) {\n          slideLeft(row);\n        }\n        playing();\n\n        break;\n\n      case 'ArrowRight':\n        for (const row of fieldRows) {\n          slideRight(row);\n        }\n        playing();\n\n        break;\n\n      case 'ArrowUp':\n        slideUp(fieldRows);\n        playing();\n\n        break;\n\n      case 'ArrowDown':\n        slideDown(fieldRows);\n        playing();\n\n        break;\n\n      default:\n        return;\n    };\n  });\n});\n"]}